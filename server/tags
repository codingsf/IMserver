!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCEPT	connection.h	/^        ACCEPT,\/\/接受的连接$/;"	e	enum:Connection::ConnType
AvailableSize	circularbuffer.cpp	/^size_t CircularBuffer::AvailableSize()$/;"	f	class:CircularBuffer
Bind	server.cpp	/^void Server::Bind()$/;"	f	class:Server
CC	Makefile	/^CC=g++$/;"	m
CFLAGS	Makefile	/^CFLAGS=-g$/;"	m
CONNECT	connection.h	/^        CONNECT\/\/连接别人的$/;"	e	enum:Connection::ConnType
Capacity	circularbuffer.h	/^    size_t Capacity() const { return capacity_; }\/\/容量$/;"	f	class:CircularBuffer
CircularBuffer	circularbuffer.cpp	/^CircularBuffer::CircularBuffer(size_t capacity)$/;"	f	class:CircularBuffer
CircularBuffer	circularbuffer.h	/^class CircularBuffer$/;"	c
Clear	circularbuffer.cpp	/^void CircularBuffer::Clear()$/;"	f	class:CircularBuffer
ConnType	connection.h	/^    enum ConnType{$/;"	g	class:Connection
Connection	connection.cpp	/^Connection::Connection()$/;"	f	class:Connection
Connection	connection.h	/^class Connection$/;"	c
EPOLLMAX	server.h	15;"	d
HANDLEMAX	server.h	17;"	d
HandleEvents	connection.cpp	/^void Connection::HandleEvents(epoll_event* ev)$/;"	f	class:Connection
HandleInputEvents	connection.cpp	/^void Connection::HandleInputEvents()$/;"	f	class:Connection
HandleOutputEvents	connection.cpp	/^void Connection::HandleOutputEvents()$/;"	f	class:Connection
HandleServerEvents	server.cpp	/^void Server::HandleServerEvents()$/;"	f	class:Server
Init	circularbuffer.cpp	/^bool CircularBuffer::Init()$/;"	f	class:CircularBuffer
Init	server.cpp	/^void Server::Init()$/;"	f	class:Server
InitSockfd	server.cpp	/^void Server::InitSockfd()$/;"	f	class:Server
LIBS	Makefile	/^LIBS=$/;"	m
LISTENQ	server.h	16;"	d
Listen	server.cpp	/^void Server::Listen()$/;"	f	class:Server
OBJ	Makefile	/^OBJ=$(SRC:.cpp=.o)$/;"	m
OnClose	connection.cpp	/^void Connection::OnClose()$/;"	f	class:Connection
PRJ	Makefile	/^PRJ=server$/;"	m
Read	circularbuffer.cpp	/^size_t CircularBuffer::Read(char *data, size_t bytes)$/;"	f	class:CircularBuffer
RecvData	connection.cpp	/^size_t Connection::RecvData()$/;"	f	class:Connection
RecvSize	circularbuffer.cpp	/^size_t CircularBuffer::RecvSize()$/;"	f	class:CircularBuffer
SRC	Makefile	/^SRC=server.cpp \\$/;"	m
SendData	connection.cpp	/^size_t Connection::SendData()$/;"	f	class:Connection
Server	server.cpp	/^Server::Server(uint16_t port)$/;"	f	class:Server
Server	server.h	/^class Server$/;"	c
SetNonblock	server.cpp	/^void Server::SetNonblock(int sockfd)$/;"	f	class:Server
Size	circularbuffer.h	/^    size_t Size() const { return size_; }\/\/大小$/;"	f	class:CircularBuffer
Start	server.cpp	/^void Server::Start()$/;"	f	class:Server
Tail	circularbuffer.cpp	/^char* CircularBuffer::Tail()$/;"	f	class:CircularBuffer
Write	circularbuffer.cpp	/^size_t CircularBuffer::Write(const char *data, size_t bytes)$/;"	f	class:CircularBuffer
_CIRCLEULARBUFFER_H	circularbuffer.h	3;"	d
beg_index_	circularbuffer.h	/^    size_t beg_index_;\/\/开始$/;"	m	class:CircularBuffer
cType	connection.h	/^    ConnType cType;$/;"	m	class:Connection
capacity_	circularbuffer.h	/^    size_t capacity_;\/\/容量$/;"	m	class:CircularBuffer
data_	circularbuffer.h	/^    char *data_;\/\/数据指针$/;"	m	class:CircularBuffer
end_index_	circularbuffer.h	/^    size_t end_index_;\/\/结束$/;"	m	class:CircularBuffer
m_addr	connection.h	/^    struct sockaddr_in m_addr;\/\/连接的地址信息(IP地址和端口号)$/;"	m	class:Connection	typeref:struct:Connection::sockaddr_in
m_addr	server.h	/^    struct sockaddr_in m_addr;         \/\/地址$/;"	m	class:Server	typeref:struct:Server::sockaddr_in
m_connections	server.h	/^    std::map<uint64_t,Connection*> m_connections; \/\/连接map$/;"	m	class:Server
m_epollfd	server.h	/^    int m_epollfd;                  \/\/epoll描述符$/;"	m	class:Server
m_ev	server.h	/^    epoll_event m_ev;               \/\/自身的事件$/;"	m	class:Server
m_events	server.h	/^    epoll_event m_events[HANDLEMAX];\/\/需要处理的事件$/;"	m	class:Server
m_eventsCount	server.h	/^    int m_eventsCount;                \/\/需要处理的时间数量$/;"	m	class:Server
m_inputbuffer	connection.h	/^    CircularBuffer* m_inputbuffer;$/;"	m	class:Connection
m_outputbuffer	connection.h	/^    CircularBuffer* m_outputbuffer;$/;"	m	class:Connection
m_serverState	server.h	/^    bool m_serverState;             \/\/服务器状态$/;"	m	class:Server
m_sockfd	connection.h	/^    int m_sockfd;\/\/套接字$/;"	m	class:Connection
m_sockfd	server.h	/^    int m_sockfd;$/;"	m	class:Server
main	main.cpp	/^int main(int argc,char** argv)$/;"	f
size_	circularbuffer.h	/^    size_t size_;\/\/大小$/;"	m	class:CircularBuffer
~CircularBuffer	circularbuffer.cpp	/^CircularBuffer::~CircularBuffer()$/;"	f	class:CircularBuffer
~Connection	connection.cpp	/^Connection::~Connection()$/;"	f	class:Connection
~Server	server.cpp	/^Server::~Server()$/;"	f	class:Server
